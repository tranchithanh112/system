(*$LIBRARY XP01*)
(*$IMPORT IEC_61131
filename: 'Libraries\IEC 61131-3.lcp'
version: '0.2.0.0'
timestamp: '2020-10-05-13:27:27.810'
fblks: CTD, CTU, CTUD, F_TRIG, R_TRIG, RS, SEMA, SR, TOF, TON, TP
*)
(* GLOBAL VARIABLES *)
VAR_GLOBAL (*$CHANNEL*) 
 SHOWN_SEC_BUNKERING (*$COMMENT 01040 DURATION SHOW BUNKERING*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 SHOWN_DAYS_BUNKERING (*$COMMENT 01042 SLIDE DAYS BUNKERING*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 SHOWN_SEC_DG_FO (*$COMMENT 01045 DURATION SHOW DG FO*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 SHOWN_DAY_DG_FO (*$COMMENT 01047 SLIDE DAYS DG FO*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 GREY_WATER_TANK_INHIBIT (*$COMMENT 01580 GREY WATER TANK INHIBIT*) : BOOL;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 BLACK_WATER_TANK_INHIBIT (*$COMMENT 01581 BLACK WATER TANK INHIBIT*) : BOOL;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 PORTABLE_WATER_TANK_P_INHIBIT (*$COMMENT 01582 PORTABLE WATER TANK (P) INHIBIT*) : BOOL;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 PORTABLE_WATER_TANK_S_INHIBIT (*$COMMENT 01583 PORTABLE WATER TANK (S) INHIBIT*) : BOOL;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_AFT_DB_TANK_C_INHIBIT (*$COMMENT 01584 FO AFT DB TANK (C) INHIBIT*) : BOOL;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_DB_TANK_P_INHIBIT (*$COMMENT 01585 FO DB TANK (P) INHIBIT*) : BOOL;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_DB_TANK_S_INHIBIT (*$COMMENT 01586 FO DB TANK (S) INHIBIT*) : BOOL;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_WING_TANK_P_INHIBIT (*$COMMENT 01587 FO WING TANK (P) INHIBIT*) : BOOL;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_WING_TANK_S_INHIBIT (*$COMMENT 01588 FO WING TANK (S) INHIBIT*) : BOOL;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_DAY_TANK_P_INHIBIT (*$COMMENT 01589 FO DAY TANK (P) INHIBIT*) : BOOL;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_DAY_TANK_S_INHIBIT (*$COMMENT 01590 FO DAY TANK (S) INHIBIT*) : BOOL;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_OVER_FLOW_TANK_INHIBIT (*$COMMENT 01591 FO OVER FLOW TANK INHIBIT*) : BOOL;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 GREY_WATER_TANK_LEVEL (*$COMMENT 01615 GREY WATER TANK LEVEL*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 BLACK_WATER_TANK_LEVEL (*$COMMENT 01616 BLACK WATER TANK LEVEL*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 PORTABLE_WATER_TANK_P_LEVEL (*$COMMENT 01617 PORTABLE WATER TANK (P) LEVEL*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 PORTABLE_WATER_TANK_S_LEVEL (*$COMMENT 01618 PORTABLE WATER TANK (S) LEVEL*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_AFT_DB_TANK_C_LEVEL (*$COMMENT 01619 FO AFT DB TANK (C) LEVEL*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_DB_TANK_P_LEVEL (*$COMMENT 01620 FO DB TANK (P) LEVEL*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_DB_TANK_S_LEVEL (*$COMMENT 01621 FO DB TANK (S) LEVEL*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_WING_TANK_P_LEVEL (*$COMMENT 01622 FO WING TANK (P) LEVEL*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_WING_TANK_S_LEVEL (*$COMMENT 01623 FO WING TANK (S) LEVEL*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 GREY_WATER_TANK_SOUNDING (*$COMMENT 01640 GREY WATER TANK SOUNDING*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 BLACK_WATER_TANK_SOUNDING (*$COMMENT 01641 BLACK WATER TANK SOUNDING*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 PORTABLE_WATER_TANK_P_SOUNDING (*$COMMENT 01642 PORTABLE WATER TANK (P) SOUNDING*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 PORTABLE_WATER_TANK_S_SOUNDING (*$COMMENT 01643 PORTABLE WATER TANK (S) SOUNDING*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_AFT_DB_TANK_C_SOUNDING (*$COMMENT 01644 FO AFT DB TANK (C) SOUNDING*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_DB_TANK_P_SOUNDING (*$COMMENT 01645 FO DB TANK (P) SOUNDING*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_DB_TANK_S_SOUNDING (*$COMMENT 01646 FO DB TANK (S) SOUNDING*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_WING_TANK_P_SOUNDING (*$COMMENT 01647 FO WING TANK (P) SOUNDING*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_WING_TANK_S_SOUNDING (*$COMMENT 01648 FO WING TANK (S) SOUNDING*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_DAY_TANK_P_SOUNDING (*$COMMENT 01649 FO DAY TANK (P) SOUNDING*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_DAY_TANK_S_SOUNDING (*$COMMENT 01650 FO DAY TANK (S) SOUNDING*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_OVER_FLOW_TANK_SOUNDING (*$COMMENT 01651 FO OVER FLOW TANK SOUNDING*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 GREY_WATER_TANK_VOLUME (*$COMMENT 01660 GREY WATER TANK VOLUME*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 BLACK_WATER_TANK_VOLUME (*$COMMENT 01661 BLACK WATER TANK VOLUME*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 PORTABLE_WATER_TANK_P_VOLUME (*$COMMENT 01662 PORTABLE WATER TANK (P) VOLUME*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 PORTABLE_WATER_TANK_S_VOLUME (*$COMMENT 01663 PORTABLE WATER TANK (S) VOLUME*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_AFT_DB_TANK_C_VOLUME (*$COMMENT 01664 FO AFT DB TANK (C) VOLUME*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_DB_TANK_P_VOLUME (*$COMMENT 01665 FO DB TANK (P) VOLUME*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_DB_TANK_S_VOLUME (*$COMMENT 01666 FO DB TANK (S) VOLUME*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_WING_TANK_P_VOLUME (*$COMMENT 01667 FO WING TANK (P) VOLUME*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_WING_TANK_S_VOLUME (*$COMMENT 01668 FO WING TANK (S) VOLUME*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_DAY_TANK_P_VOLUME (*$COMMENT 01669 FO DAY TANK (P) VOLUME*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_DAY_TANK_S_VOLUME (*$COMMENT 01670 FO DAY TANK (S) VOLUME*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_OVER_FLOW_TANK_VOLUME (*$COMMENT 01671 FO OVER FLOW TANK VOLUME*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 GREY_WATER_TANK_PERCENT (*$COMMENT 01680 GREY WATER TANK PERCENT*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 BLACK_WATER_TANK_PERCENT (*$COMMENT 01681 BLACK WATER TANK PERCENT*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 PORTABLE_WATER_TANK_P_PERCENT (*$COMMENT 01682 PORTABLE WATER TANK (P) PERCENT*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 PORTABLE_WATER_TANK_S_PERCENT (*$COMMENT 01683 PORTABLE WATER TANK (S) PERCENT*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_AFT_DB_TANK_C_PERCENT (*$COMMENT 01684 FO AFT DB TANK (C) PERCENT*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_DB_TANK_P_PERCENT (*$COMMENT 01685 FO DB TANK (P) PERCENT*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_DB_TANK_S_PERCENT (*$COMMENT 01686 FO DB TANK (S) PERCENT*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_WING_TANK_P_PERCENT (*$COMMENT 01687 FO WING TANK (P) PERCENT*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_WING_TANK_S_PERCENT (*$COMMENT 01688 FO WING TANK (S) PERCENT*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_DAY_TANK_P_PERCENT (*$COMMENT 01689 FO DAY TANK (P) PERCENT*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_DAY_TANK_S_PERCENT (*$COMMENT 01690 FO DAY TANK (S) PERCENT*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_OVER_FLOW_TANK_PERCENT (*$COMMENT 01691 FO OVER FLOW TANK PERCENT*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_DAY_TANK_P_LEVEL (*$COMMENT 01701 FO DAY TANK (P) LEVEL*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_DAY_TANK_S_LEVEL (*$COMMENT 01702 FO DAY TANK (S) LEVEL*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 BUNKERING_FO_INLET_FLOW_SENSOR (*$COMMENT 01704 BUNKERING FO INLET FLOW SENSOR*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 BUNKERING_FO_OUTLET_FLOW_SENSOR (*$COMMENT 01705 BUNKERING FO OUTLET FLOW SENSOR*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 NO1NO4_GENERATOR_FO_INLET_FLOW_SENSOR (*$COMMENT 01706 NO1&NO4 GENERATOR FO INLET FLOW SENSOR*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 NO2NO3_GENERATOR_FO_INLET_FLOW_SENSOR (*$COMMENT 01707 NO2&NO3 GENERATOR FO INLET FLOW SENSOR*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 NO1NO4_GENERATOR_FO_RETURN_FLOW_SENSOR (*$COMMENT 01708 NO1&NO4 GENERATOR FO RETURN FLOW SENSOR*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 NO2NO3_GENERATOR_FO_RETURN_FLOW_SENSOR (*$COMMENT 01709 NO2&NO3 GENERATOR FO RETURN FLOW SENSOR*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_OVER_FLOW_TANK_LEVEL (*$COMMENT 01710 FO OVER FLOW TANK LEVEL*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 GREY_WATER_TANK_WEIGHT (*$COMMENT 01740 GREY WATER TANK WEIGHT*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 BLACK_WATER_TANK_WEIGHT (*$COMMENT 01741 BLACK WATER TANK WEIGHT*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 PORTABLE_WATER_TANK_P_WEIGHT (*$COMMENT 01742 PORTABLE WATER TANK (P) WEIGHT*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 PORTABLE_WATER_TANK_S_WEIGHT (*$COMMENT 01743 PORTABLE WATER TANK (S) WEIGHT*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_AFT_DB_TANK_C_WEIGHT (*$COMMENT 01744 FO AFT DB TANK (C) WEIGHT*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_DB_TANK_P_WEIGHT (*$COMMENT 01745 FO DB TANK (P) WEIGHT*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_DB_TANK_S_WEIGHT (*$COMMENT 01746 FO DB TANK (S) WEIGHT*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_WING_TANK_P_WEIGHT (*$COMMENT 01747 FO WING TANK (P) WEIGHT*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_WING_TANK_S_WEIGHT (*$COMMENT 01748 FO WING TANK (S) WEIGHT*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_DAY_TANK_P_WEIGHT (*$COMMENT 01749 FO DAY TANK (P) WEIGHT*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_DAY_TANK_S_WEIGHT (*$COMMENT 01750 FO DAY TANK (S) WEIGHT*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_OVER_FLOW_TANK_WEIGHT (*$COMMENT 01751 FO OVER FLOW TANK WEIGHT*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 GREY_WATER_TANK_LAL (*$COMMENT 01760 GREY WATER TANK LAL*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 BLACK_WATER_TANK_LAL (*$COMMENT 01761 BLACK WATER TANK LAL*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 PORTABLE_WATER_TANK_P_LAL (*$COMMENT 01762 PORTABLE WATER TANK (P) LAL*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 PORTABLE_WATER_TANK_S_LAL (*$COMMENT 01763 PORTABLE WATER TANK (S) LAL*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_AFT_DB_TANK_C_LAL (*$COMMENT 01764 FO AFT DB TANK (C) LAL*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_DB_TANK_P_LAL (*$COMMENT 01765 FO DB TANK (P) LAL*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_DB_TANK_S_LAL (*$COMMENT 01766 FO DB TANK (S) LAL*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_WING_TANK_P_LAL (*$COMMENT 01767 FO WING TANK (P) LAL*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_WING_TANK_S_LAL (*$COMMENT 01768 FO WING TANK (S) LAL*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_DAY_TANK_P_LAL (*$COMMENT 01769 FO DAY TANK (P) LAL*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_DAY_TANK_S_LAL (*$COMMENT 01770 FO DAY TANK (S) LAL*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_OVER_FLOW_TANK_LAL (*$COMMENT 01771 FO OVER FLOW TANK LAL*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 GREY_WATER_TANK_LAH (*$COMMENT 01780 GREY WATER TANK LAH*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 BLACK_WATER_TANK_LAH (*$COMMENT 01781 BLACK WATER TANK LAH*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 PORTABLE_WATER_TANK_P_LAH (*$COMMENT 01782 PORTABLE WATER TANK (P) LAH*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 PORTABLE_WATER_TANK_S_LAH (*$COMMENT 01783 PORTABLE WATER TANK (S) LAH*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_AFT_DB_TANK_C_LAH (*$COMMENT 01784 FO AFT DB TANK (C) LAH*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_DB_TANK_P_LAH (*$COMMENT 01785 FO DB TANK (P) LAH*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_DB_TANK_S_LAH (*$COMMENT 01786 FO DB TANK (S) LAH*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_WING_TANK_P_LAH (*$COMMENT 01787 FO WING TANK (P) LAH*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_WING_TANK_S_LAH (*$COMMENT 01788 FO WING TANK (S) LAH*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_DAY_TANK_P_LAH (*$COMMENT 01789 FO DAY TANK (P) LAH*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_DAY_TANK_S_LAH (*$COMMENT 01790 FO DAY TANK (S) LAH*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_OVER_FLOW_TANK_LAH (*$COMMENT 01791 FO OVER FLOW TANK LAH*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 BUNKERRING_FO_USED (*$COMMENT 01840 BUNKERRING FO USED*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 NO_1NO_4_FO_USED (*$COMMENT 01841 NO.1&NO.4 FO USED*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 NO_2NO_3_FO_USED (*$COMMENT 01842 NO.2&NO.3 FO USED*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 BUNKERRING_FO_CONSUME (*$COMMENT 01845 BUNKERRING FO CONSUME*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 NO_1NO_4_FO_CONSUME (*$COMMENT 01846 NO.1&NO.4 FO CONSUME*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 NO_2NO_3_FO_CONSUME (*$COMMENT 01847 NO.2&NO.3 FO CONSUME*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FO_CONSUMPTION_TOTAL (*$COMMENT 01848 FO CONSUMPTION TOTAL*) : FINT;
END_VAR

VAR_GLOBAL (*$CHANNEL*) 
 FUEL_CONSUMPTION_RESET (*$COMMENT 01850 FUEL CONSUMPTION RESET*) : BOOL;
END_VAR

(* USER POUs *)
FUNCTION_BLOCK TANKS_CAL


VAR_INPUT 

 SENSOR : FINT ;  // MM
 DENSITY : FINT ;
 CAPACITY : FINT ;
 VOLUME : FINT ;
 OFFSET : FINT;
END_VAR


VAR_OUTPUT

 SOUNDING : FINT ;
 PERCENT : FINT ;
 WEIGHT : FINT ;

END_VAR


 SOUNDING := SENSOR+OFFSET ;
 PERCENT := (VOLUME/CAPACITY)*100;
 WEIGHT := VOLUME*DENSITY;



END_FUNCTION_BLOCK

FUNCTION_BLOCK PULSE_GEN

VAR_INPUT
    ENABLE : BOOL ;
    FREQ   : TIME ;
    WIDTH  : TIME ;    
END_VAR

VAR_OUTPUT
    Q: BOOL ;
END_VAR

VAR
   TIMER_ON: TON;
   TIMER_OFF: TOF;
END_VAR

  TIMER_ON(IN:= NOT (TIMER_OFF.Q AND ENABLE) , PT := FREQ);
  TIMER_OFF(IN:= TIMER_ON.Q, PT := WIDTH);
 
  Q:= TIMER_OFF.Q AND ENABLE;                

END_FUNCTION_BLOCK

PROGRAM TANKS
 VAR_EXTERNAL (*$AUTO*) END_VAR
 
VAR

 GREY_WATER_TANK	      : TANKS_CAL ;
 BLACK_WATER_TANK       : TANKS_CAL ;
 PORTABLE_WATER_TANK_P  : TANKS_CAL ;
 PORTABLE_WATER_TANK_S  : TANKS_CAL ;
 FO_AFT_DB_TANK_C       : TANKS_CAL ;
 FO_DB_TANK_P	          : TANKS_CAL ;
 FO_DB_TANK_S	          : TANKS_CAL ;
 FO_WING_TANK_P	        : TANKS_CAL ;
 FO_WING_TANK_S	        : TANKS_CAL ;
 FO_DAY_TANK_P          : TANKS_CAL ;
 FO_DAY_TANK_S          : TANKS_CAL ;
 FO_OVERFLOW_TANK       : TANKS_CAL ;
 END_VAR
 
  ///FOR TRENDS
 SHOWN_SEC_BUNKERING    := SHOWN_DAYS_BUNKERING * 3600;
 SHOWN_SEC_DG_FO        := SHOWN_DAY_DG_FO * 3600;
 
 
 (*IF WIND_RAW > 180 THEN
   WIND_CALC := (WIND_RAW - 360);
   ELSE
   WIND_CALC := WIND_RAW;
   END_IF*)
 
//FO_TOTAL := ME_PS_FO + ME_SB_FO + GE_PS_FO + GE_SB_FO ;

 GREY_WATER_TANK 
 
 (  SENSOR      :=  GREY_WATER_TANK_LEVEL ,
    DENSITY     :=  FINT#1,
    CAPACITY    :=  FINT#5.900,
    OFFSET      :=  0,
    VOLUME      :=  GREY_WATER_TANK_VOLUME ,
    SOUNDING    =>  GREY_WATER_TANK_SOUNDING ,
    PERCENT     =>  GREY_WATER_TANK_PERCENT ,
    WEIGHT      =>  GREY_WATER_TANK_WEIGHT  )  ;

 BLACK_WATER_TANK 
 
 (  SENSOR      :=  BLACK_WATER_TANK_LEVEL ,
    DENSITY     :=  FINT#1,
    CAPACITY    :=  FINT#5.900,
    OFFSET      :=  0,
    VOLUME      :=  BLACK_WATER_TANK_VOLUME ,
    SOUNDING    =>  BLACK_WATER_TANK_SOUNDING ,
    PERCENT     =>  BLACK_WATER_TANK_PERCENT ,
    WEIGHT      =>  BLACK_WATER_TANK_WEIGHT  )  ;

 PORTABLE_WATER_TANK_P 
 
 (  SENSOR      :=  PORTABLE_WATER_TANK_P_LEVEL ,
    DENSITY     :=  FINT#1,
    CAPACITY    :=  FINT#32.982,
    OFFSET      :=  260,
    VOLUME      :=  PORTABLE_WATER_TANK_P_VOLUME ,
    SOUNDING    =>  PORTABLE_WATER_TANK_P_SOUNDING ,
    PERCENT     =>  PORTABLE_WATER_TANK_P_PERCENT ,
    WEIGHT      =>  PORTABLE_WATER_TANK_P_WEIGHT  )  ;

 PORTABLE_WATER_TANK_S 
 
 (  SENSOR      :=  PORTABLE_WATER_TANK_S_LEVEL ,
    DENSITY     :=  FINT#1,
    CAPACITY    :=  FINT#32.982,
    OFFSET      :=  260,
    VOLUME      :=  PORTABLE_WATER_TANK_S_VOLUME ,
    SOUNDING    =>  PORTABLE_WATER_TANK_S_SOUNDING ,
    PERCENT     =>  PORTABLE_WATER_TANK_S_PERCENT ,
    WEIGHT      =>  PORTABLE_WATER_TANK_S_WEIGHT  )  ;

 FO_AFT_DB_TANK_C 
 
 (  SENSOR      :=  FO_AFT_DB_TANK_C_LEVEL ,
    DENSITY     :=  FINT#0.870,
    CAPACITY    :=  FINT#49.127,
    OFFSET      :=  220,
    VOLUME      :=  FO_AFT_DB_TANK_C_VOLUME ,
    SOUNDING    =>  FO_AFT_DB_TANK_C_SOUNDING ,
    PERCENT     =>  FO_AFT_DB_TANK_C_PERCENT ,
    WEIGHT      =>  FO_AFT_DB_TANK_C_WEIGHT  )  ;

 FO_DB_TANK_P 
 
 (  SENSOR      :=  FO_DB_TANK_P_LEVEL ,
    DENSITY     :=  FINT#0.870,
    CAPACITY    :=  FINT#53.032,
    OFFSET      :=  430,
    VOLUME      :=  FO_DB_TANK_P_VOLUME ,
    SOUNDING    =>  FO_DB_TANK_P_SOUNDING ,
    PERCENT     =>  FO_DB_TANK_P_PERCENT ,
    WEIGHT      =>  FO_DB_TANK_P_WEIGHT  )  ;
    
 FO_DB_TANK_S 
 
 (  SENSOR      :=  FO_DB_TANK_S_LEVEL ,
    DENSITY     :=  FINT#0.870,
    CAPACITY    :=  FINT#53.032,
    OFFSET      :=  430,
    VOLUME      :=  FO_DB_TANK_S_VOLUME ,
    SOUNDING    =>  FO_DB_TANK_S_SOUNDING ,
    PERCENT     =>  FO_DB_TANK_S_PERCENT ,
    WEIGHT      =>  FO_DB_TANK_S_WEIGHT  )  ;

 FO_WING_TANK_P 
 
 (  SENSOR      :=  FO_WING_TANK_P_LEVEL ,
    DENSITY     :=  FINT#0.870,
    CAPACITY    :=  FINT#31.872,
    OFFSET      :=  860,
    VOLUME      :=  FO_WING_TANK_P_VOLUME ,
    SOUNDING    =>  FO_WING_TANK_P_SOUNDING ,
    PERCENT     =>  FO_WING_TANK_P_PERCENT ,
    WEIGHT      =>  FO_WING_TANK_P_WEIGHT  )  ;
    
    FO_WING_TANK_S 
 
 (  SENSOR      :=  FO_WING_TANK_S_LEVEL ,
    DENSITY     :=  FINT#0.870,
    CAPACITY    :=  FINT#31.872,
    OFFSET      :=  860,
    VOLUME      :=  FO_WING_TANK_S_VOLUME ,
    SOUNDING    =>  FO_WING_TANK_S_SOUNDING ,
    PERCENT     =>  FO_WING_TANK_S_PERCENT ,
    WEIGHT      =>  FO_WING_TANK_S_WEIGHT  )  ;
    
    FO_DAY_TANK_P

 (  SENSOR      :=  FO_DAY_TANK_P_LEVEL ,
    DENSITY     :=  FINT#0.870,
    CAPACITY    :=  FINT#22.290,
    OFFSET      :=  160,
    VOLUME      :=  FO_DAY_TANK_P_VOLUME ,
    SOUNDING    =>  FO_DAY_TANK_P_SOUNDING ,
    PERCENT     =>  FO_DAY_TANK_P_PERCENT ,
    WEIGHT      =>  FO_DAY_TANK_P_WEIGHT  )  ;
    
    FO_DAY_TANK_S

 (  SENSOR      :=  FO_DAY_TANK_S_LEVEL ,
    DENSITY     :=  FINT#0.870,
    CAPACITY    :=  FINT#22.290,
    OFFSET      :=  160,
    VOLUME      :=  FO_DAY_TANK_S_VOLUME ,
    SOUNDING    =>  FO_DAY_TANK_S_SOUNDING ,
    PERCENT     =>  FO_DAY_TANK_S_PERCENT ,
    WEIGHT      =>  FO_DAY_TANK_S_WEIGHT  )  ;
    
    FO_OVERFLOW_TANK

 (  SENSOR      :=  FO_OVER_FLOW_TANK_LEVEL ,
    DENSITY     :=  FINT#0.870,
    CAPACITY    :=  FINT#22.290,
    OFFSET      :=  160,
    VOLUME      :=  FO_OVER_FLOW_TANK_VOLUME ,
    SOUNDING    =>  FO_OVER_FLOW_TANK_SOUNDING ,
    PERCENT     =>  FO_OVER_FLOW_TANK_PERCENT ,
    WEIGHT      =>  FO_OVER_FLOW_TANK_WEIGHT  )  ;
    
    
    
    
 

END_PROGRAM

PROGRAM FUEL_CONSUM
 VAR_EXTERNAL (*$AUTO*) END_VAR
 VAR

 CLK_1_SEC: PULSE_GEN;
 PULSE_1_SEC  : BOOL;
 PULSE_TO_FINT : FINT ;

 END_VAR

  BUNKERRING_FO_USED  :=  BUNKERING_FO_INLET_FLOW_SENSOR - BUNKERING_FO_OUTLET_FLOW_SENSOR   ;


  NO_1NO_4_FO_USED    :=  NO1NO4_GENERATOR_FO_INLET_FLOW_SENSOR - NO1NO4_GENERATOR_FO_RETURN_FLOW_SENSOR   ;
  NO_2NO_3_FO_USED    :=  NO2NO3_GENERATOR_FO_INLET_FLOW_SENSOR - NO2NO3_GENERATOR_FO_RETURN_FLOW_SENSOR   ;        
  
  //*****************FUEL CONSUMPTION*********************************

CLK_1_SEC
( 	
	ENABLE := TRUE ,
	FREQ   := 1000, //1 seconds
	WIDTH  := 100
	
);

  PULSE_1_SEC := CLK_1_SEC.Q ;

  IF 
  PULSE_1_SEC = TRUE 
  THEN 
  PULSE_TO_FINT := 1 ; 
  ELSE
  PULSE_TO_FINT :=0 ;
  END_IF

  IF 
  FUEL_CONSUMPTION_RESET= TRUE
  THEN
  BUNKERRING_FO_CONSUME :=0  ;
  ELSE
  BUNKERRING_FO_CONSUME := BUNKERRING_FO_CONSUME + ((BUNKERRING_FO_USED/3600) * PULSE_TO_FINT) ; 
  END_IF 

  IF 
  FUEL_CONSUMPTION_RESET = TRUE
  THEN
  NO_1NO_4_FO_CONSUME :=0  ;
  ELSE
  NO_1NO_4_FO_CONSUME := NO_1NO_4_FO_CONSUME + ((NO_1NO_4_FO_USED/3600) * PULSE_TO_FINT) ; 
  END_IF

  IF 
  FUEL_CONSUMPTION_RESET = TRUE
  THEN
  NO_2NO_3_FO_CONSUME :=0  ;
  ELSE
  NO_2NO_3_FO_CONSUME := NO_2NO_3_FO_CONSUME + ((NO_2NO_3_FO_USED/3600) * PULSE_TO_FINT) ; 
  END_IF 



  FO_CONSUMPTION_TOTAL := BUNKERRING_FO_CONSUME + NO_1NO_4_FO_CONSUME + NO_2NO_3_FO_CONSUME ;

END_PROGRAM

(*$TASKS 
.TASK TASK
.LOOPPARAM 0 200
TANKS
FUEL_CONSUM
.END_TASK
*)
(*$END_LIBRARY*)
